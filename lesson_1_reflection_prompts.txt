How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I have been using git for some time already, viewing the diff is very helpful 
    because the lines that have a difference are highlighted for you and you do not need
    to find them manually.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I think that seeing the history of a file is helpful to see the development of features, or it makes you more efficient because you can find out what is causing a bug that has just presented itself after changing some code. So you can pinpoint when was the last time in the history of the file that the feature actually worked.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pros are that you, as a human, know when you have completed a feature or a reasonable
    ampunt of work that can represent a commit. So in this way if you have to rollback to previous versions you can do this gradually per feature and not line by line that has been saved. The cons can be that if you don't commit often enough that it becomes a bit useless to use version control as you cannot pinpoint where an issue may have arised and rolling back would revert too many changes. In addition the process of commiting and pushing code can be cumbersome for git beginners which may lead to slow workflow and errors.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git was created for software develeopment therefore it is useful to commit multiple files at a time as it is normal to manipulate more than one file/class when writing code. While google docs diplay just a text editor on which one can be working and it is complitely seprate from any other file.

How can you use the commands git log and git diff to view the history of files?

    git log shows the commits history with a lot of details. Git diff allows to see what is changed in a file or working dicertory since the last commit.

How might using version control make you more confident to make changes that
could break something?

    You can have a more experimental approach since if things do not work you can delete the changes before commiting, or revert a commmit to undo changes that acutally ended up breaking your code. Or you can checkout to a previous commit and make experimental commits as you can always rollback or branch off from where you are to implement changes, as the original version is always saved in the git history.

Now that you have your workspace set up, what do you want to try using Git for?

    I use git a lot already, I just wanna take this coruse to see if there topics I can master which I am not really aware of when it comes to version-control. And I already learnt few new tricks that are going to be very handy.
    I want to use it while I build my websites.
